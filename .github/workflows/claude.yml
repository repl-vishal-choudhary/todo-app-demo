name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            You were mentioned in a comment. Please respond to the user's request.
            
            If this is on a pull request and code review is requested:
            
            ## CRITICAL: USE ONLY INLINE COMMENTS - NO SUMMARY COMMENTS
            
            1. First, read the team review guidelines from `.claude/commands/team-review.md`
            2. Check existing comments: gh pr view ${{ github.event.issue.number || github.event.pull_request.number }} --comments
            3. Get the PR diff using: gh pr diff ${{ github.event.issue.number || github.event.pull_request.number }}
            4. Apply the review standards and process defined in team-review.md
            
            ## 5. Create ONLY Inline Review Comments (NO SUMMARY):
            
            **FORBIDDEN COMMANDS - DO NOT USE:**
            - ❌ NEVER use: `gh pr comment` (creates summary comments)
            - ❌ NEVER use: `gh pr review --comment` (creates summary)
            - ❌ NEVER post a general review summary
            
            **REQUIRED: Use ONLY inline comments at specific lines:**
            
            ### Step 1: Discover API endpoints dynamically
            ```bash
            PR_NUM=${{ github.event.issue.number || github.event.pull_request.number }}
            COMMIT_SHA=$(gh pr view ${PR_NUM} --json headRefOid -q .headRefOid)
            PR_DATA=$(gh api repos/${{ github.repository }}/pulls/${PR_NUM})
            REVIEWS_URL=$(echo "$PR_DATA" | jq -r '._links.reviews.href' | sed 's|https://api.github.com||')
            COMMENTS_URL=$(echo "$PR_DATA" | jq -r '._links.comments.href' | sed 's|https://api.github.com||')
            
            # Fallback if _links not available
            if [ -z "$REVIEWS_URL" ]; then
              REVIEWS_URL="repos/${{ github.repository }}/pulls/${PR_NUM}/reviews"
              COMMENTS_URL="repos/${{ github.repository }}/pulls/${PR_NUM}/comments"
            fi
            ```
            
            ### Step 2: Start a pending review
            ```bash
            REVIEW_ID=$(gh api "$REVIEWS_URL" \
              --method POST \
              --field commit_id="$COMMIT_SHA" \
              --field event="PENDING" \
              --jq '.id')
            ```
            
            ### Step 3: Add inline comments for EACH issue
            For every issue found, create an inline comment:
            ```bash
            # Example with proper suggestion format
            BODY="**ISSUE:** Using any type
            **IMPACT:** Loses type safety
            **FIX:**
            \`\`\`suggestion
            todos: Todo[]
            \`\`\`
            **WHY:** Proper typing prevents runtime errors"
            
            gh api "$COMMENTS_URL" \
              --method POST \
              --field commit_id="$COMMIT_SHA" \
              --field path="src/components/TodoFilter.tsx" \
              --field line=5 \
              --field side="RIGHT" \
              --field body="$BODY"
            ```
            
            ### Step 4: Submit the review (comments only, no summary)
            ```bash
            gh api "$REVIEWS_URL/${REVIEW_ID}/events" \
              --method POST \
              --field event="COMMENT"
            ```
            
            **REMEMBER:**
            - Create one inline comment per issue
            - Use line numbers from the diff
            - Include suggestion blocks for fixes
            - DO NOT create any summary comment
            
            Otherwise, respond to the user's request as appropriate.
          claude_args: '--allowed-tools "Bash(git:*),Bash(gh:*),Bash(npm install),Bash(npm run lint),Bash(npm test),Bash(npm run build)"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

