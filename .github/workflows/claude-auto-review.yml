name: Claude Auto Review

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  claude-auto-review:
    # Skip draft PRs
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Claude PR Action
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            # PR Review for #${{ github.event.pull_request.number }}

            First, read the team review guidelines from `.claude/commands/team-review.md` to understand the review standards and process.

            Then follow these steps:

            ## 1. Load Review Guidelines
            Read the file `.claude/commands/team-review.md` for complete review instructions, including:
            - Reviewer persona and philosophy
            - Review priorities and what gets rejected
            - Comment format and examples
            - Technology-specific checks

            ## 2. Check Existing Comments
            Before reviewing, check what comments/suggestions already exist:
            ```bash
            gh pr view ${{ github.event.pull_request.number }} --comments
            ```
            
            ## 3. Get PR Diff
            Use `gh pr diff ${{ github.event.pull_request.number }}` to get the PR diff

            ## 4. Apply Review Process
            Follow the comprehensive review process defined in team-review.md, focusing on:
            - MANDATORY FIXES (breaking changes, security holes, performance killers,React violations, TypeScript issues, accessibility)
            - CODE QUALITY issues (naming, patterns, dead code)

            ## 5. Create Review Comments (Skip Duplicates)

            **IMPORTANT**: Before adding any comment:
            - Check if similar feedback already exists on that line/issue
            - Skip if existing comment adequately addresses the problem
            - Only add new comment if:
              - No existing comment on this issue, OR
              - Your suggestion is significantly better/more comprehensive
              - The existing suggestion is incorrect or incomplete

            Use GitHub CLI to create review comments:

            For general PR comments:
            ```bash
            gh pr comment ${{ github.event.pull_request.number }} --body "Your review comment"
            ```

            For creating a review with suggestions:
            ```bash
            # Start a review
            gh pr review ${{ github.event.pull_request.number }} --comment --body "Review summary"
            ```

            If you need to use specific API endpoints for inline comments with suggestions:
            1. First, discover the correct API endpoint: `gh api --help` or `gh pr review --help`
            2. Use GitHub's suggestion format in comments for code suggestions:
            ```markdown
            ```suggestion
            // Your suggested code here
            ```
            ```

            Note: GitHub automatically renders suggestion blocks that users can commit directly.
            For inline comments at specific lines, you may need to use:
            - `gh pr review` with file and line specifications
            - Or discover the current API format using `gh api --method GET repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}`

            Remember: Follow the tone and standards defined in team-review.md - be direct, provide concrete fixes, no gentle language.

          claude_args: '--allowed-tools "Bash(gh api:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(npm install),Bash(npm run lint),Bash(npm test),Bash(npm run build)"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
